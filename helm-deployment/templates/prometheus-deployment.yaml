apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-conf
data:
  prometheus: |
    global:
      scrape_interval: 5s
      evaluation_interval: 5s

    scrape_configs:
      - job_name: "Model Storage server"
        scrape_interval: 5s
        metrics_path: "/actuator/prometheus"
        static_configs:
          - targets: ["storage-app-server:8089"]

      - job_name: "Naming-Registry-service"
        scrape_interval: 5s
        metrics_path: "/actuator/prometheus"
        static_configs:
          - targets: ["eureka-registry-server:8761"]

      - job_name: "API-Gateway-service"
        scrape_interval: 5s
        metrics_path: "/actuator/prometheus"
        static_configs:
          - targets: ["api-gateway-server:7500"]

      - job_name: "Authorizaton-server"
        scrape_interval: 5s
        metrics_path: "/actuator/prometheus"
        static_configs:
          - targets: ["auth-server:8000"]

      - job_name: "Model-comparison-engine"
        scrape_interval: 5s
        metrics_path: "/actuator/prometheus"
        static_configs:
          - targets: ["model-comparison-server:8088"]

      - job_name: "Model-transformation-engine"
        scrape_interval: 5s
        metrics_path: "/actuator/prometheus"
        static_configs:
          - targets: ["model-transformation-server:8085"]

      - job_name: "Model query engine"
        scrape_interval: 5s
        metrics_path: "/actuator/prometheus"
        static_configs:
          - targets: ["model-query-server:8087"]  

      - job_name: "Model validation engine"
        scrape_interval: 5s
        metrics_path: "/actuator/prometheus"
        static_configs:
          - targets: ["model-validation-server:8086"]

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  type: NodePort
  ports:
  - name: http
    port: {{ .Values.service.prometheus.port }}
    targetPort: {{ .Values.service.prometheus.targetPort }}
  selector:
    app: prometheus

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention=31d
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        image:  {{ .Values.deployment.prometheus.image }}:{{ .Values.deployment.prometheus.tag }}
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: {{ .Values.deployment.prometheus.containerPort }} 
        volumeMounts:
        - name: prometheus-setup
          mountPath: /etc/prometheus
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: prometheus-setup
        configMap:
          name: prometheus-conf
          items:
            - key: prometheus
              path: prometheus.yml          
