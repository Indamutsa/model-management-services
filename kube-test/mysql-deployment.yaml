apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-conf
data:
  db_url: jdbc:mysql://storage-service:3306/model_storage?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
  setup: |
    -- create the databases
    CREATE DATABASE IF NOT EXISTS model_storage;

    -- create the users for each database
    CREATE USER 'arsene'@'localhost' IDENTIFIED BY 'arsene';
    GRANT CREATE, ALTER, INDEX, LOCK TABLES, REFERENCES, UPDATE, DELETE, DROP, SELECT, INSERT ON `model_storage`.* TO 'arsene'@'localhost';

    FLUSH PRIVILEGES;

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  username: YXJzZW5l
  password: YXJzZW5l
  database: bW9kZWxfc3RvcmFnZQ==
  root-password: YXJzZW5l

# ---
# apiVersion: v1
# kind: PersistentVolume #Creating a persistence volume
# metadata:
#   name: mysql-pv
#   labels:
#     type: local
# spec:
#   storageClassName: standard
#   capacity:
#     storage: 300Mi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/mnt/data/"
#   persistentVolumeReclaimPolicy: Retain #Retain the volume even after is deleted

---
apiVersion: v1
kind: PersistentVolumeClaim # The claim request the persistence volume
metadata:
  name: mysql-pv-claim
  labels:
    app: storage-app
spec:
  storageClassName: standard # Request a certain storage class name
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 300Mi

---
apiVersion: v1
kind: Service
metadata:
  name: storage-service
  labels:
    app: storage-app
spec:
  clusterIP: None
  ports:
    - port: 3306
  selector:
    app: storage-app
    tier: model-db-mysql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-deployment
  labels:
    app: storage-app
spec:
  selector:
    matchLabels:
      app: storage-app
      tier: model-db-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: storage-app
        tier: model-db-mysql
    spec:
      containers:
        - image: mysql:5.6
          name: model-db-mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: database
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-setup
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: mysql-setup
          configMap:
            name: mysql-conf
            items:
              - key: setup
                path: setup.sql
